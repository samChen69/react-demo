
10.13
今天去面试，还是受了些打击的。css3不熟，react还需要学习。

react,css3,
webpack,npm

10.12 今天搭建一个react开发框架
https://reactjs.org/docs/hello-world.html

从webpack开始，重新熟悉webpack
需要安装的包
babel-core,react,react-dom
需要安装的loader
style-loader,css-loader,file-loader,babel-loader
需要安装的插件plugins
html-webpack-plugin,clean-webpack-plugin,webpack-dev-serve,
需要配置的参数：
devtool:'inline-source-map'

webpack还需要进一步学习，resovle，代码分离等。
npm还需要学习，--save，-dev

1.jsx
jsx是对js的一种扩张，声明如下：
const element = <h1>Hello, world!</h1>;
element既不是字符串也不是dom对象，他是jsx
2.ReactDOM.render
const element = <h1>Hello, world</h1>;
ReactDOM.render(
  element,
  document.getElementById('root')
);
3.Functional and Class Components
3.1 Functional
function Welcome(props) {
  return <h1>Hello, {props.name}</h1>;
}
function App() {
  return (
    <div>
      <Welcome name="Sara" />
      <Welcome name="Cahal" />
      <Welcome name="Edite" />
    </div>
  );
}
ReactDOM.render(
  <App />,
  document.getElementById('root')
);
3.2 Class components
不要直接修改state，而是通过set方法
state的更新是异步的
// Wrong
this.setState({
  counter: this.state.counter + this.props.increment,
});
// Correct
this.setState((prevState, props) => ({
  counter: prevState.counter + props.increment
}));
state的更新是执行merge操作
the data flows down

4.事件采用的是驼峰写法
<button onClick={activateLasers}>
  Activate Lasers
</button>

5.条件渲染
如果不想渲染，就返回null

6.list渲染
function NumberList(props) {
  const numbers = props.numbers;
  const listItems = numbers.map((number) =>
    <li>{number}</li>
  );
  return (
    <ul>{listItems}</ul>
  );
}

const numbers = [1, 2, 3, 4, 5];
ReactDOM.render(
  <NumberList numbers={numbers} />,
  document.getElementById('root')
);

7.form